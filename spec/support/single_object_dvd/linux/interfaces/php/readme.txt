
PHP wrappers for IpLocator Object on Linux

************
INTRODUCTION
************

This file describes how to set up and use the PHP wrapper code with Melissa DATA's IpLocator Object.


*************
PREREQUISITES
*************

To make use of the IpLocator Object PHP wrapper you will need:

* An installation of a PHP and PHP Source. Wrapper tested with PHP 5.2.6.

* The Melissa DATA IpLocator Object library and data files installed.
  These files are installed automatically if you run setup.sh. 

You will need to know the location of these items in order to install and run the PHP wrapper.


*************
Installation
*************

Copy the entire folder that contains this readme.txt into a local directory on your computer.


*****
Files
*****

Here is a brief overview of the files contained in the sample.

IpLocatorSample.php is a script sample that you can run from the command line. 
mdIpLocatorPHPWrapper.php is a php file that is called by the sample code. This file will load the mdIpLocatorPHPWrapper.so extention.
mdIpLocatorPHPWrapper.so is the php extention.(Generated by CreateSharedObject.sh)

*****
Setup
*****

1. Edit CreateSharedObject.sh. In this file, you must point the script to the
location of the IpLocator Object library files as well as the PHP Source files. 

	set mdIpLocatorPath to the IpLocator Object libraries directory
	set PHPIncludePath1 to the PHP Source Zend directory
	set PHPIncludePath2 to the PHP Source main directory
	set PHPIncludePath3 to the PHP Source directory
	set PHPIncludePath4 to the PHP Source TSRM directory

	
2. Run CreateSharedObject.sh (sh CreateSharedObject.sh) which should generate
mdIpLocatorPHPWrapper.so. 

3. You will need to tell PHP where to load the mdIpLocatorPHPWrapper.so extension. 
To do so, you can do one of the following:

	Copy mdIpLocatorPHPWrapper.so to your PHP extention folder, which is 
	specified in your php.ini file.

	or

	Alter the php extension folder by changing php.ini.
		extension_dir ="/usr/local/lib/php/entensions"

4. If you are using the sample script IpLocatorSample.php:

	Open a command window. 

	Set LD_LIBRARY_PATH to the IpLocator Object Library directory so
	mdIpLocatorPHPWrapper.so can find libmdIpLocator.so.
	ex: export LD_LIBRARY_PATH=/DQT/Current

	type "php IpLocatorSample.php" to execute the script

3. If you are using the php IpLocator Object wrapper on a webpage, you may need to
 put mdIpLocatorPHPWrapper in the same directory as the web page and put
libmdIpLocator.so in that same directory or in a default folder for shared objects
(/usr/lib).


**************************
Setting up the Sample Code
**************************

Open IpLocatorSample.php for editing. You must set the a license string that you receive from your Melissa Data
	#Put License and Directory of IpLocator Object Data Files here
	$License = "License Here";
	$DataPath = "/DQT/Current";

*******
Updates
*******

The wrapper does not need to be rebuilt for regular updates. Simply replace IpLocator Object (libmdIpLocator.so) and the data files. However, if there is a new method added, the wrapper will need to be rebuilt to use that new method. 

****
Note
****

Here are some general solutions if you run into problems:

Q. I get an error saying "Unable to load dynamic library. libmdIpLocator.so: Cannot open shared object"
A. This means that mdIpLocatorPHPWrapper.so cannot find libmdIpLocator.so. Please look in the Setup section above. 


COPYRIGHT NOTICE

(C) 2009 Melissa Data Corporation. All rights reserved.
